Input Validation,The product does not validate or incorrectly validates input data,The product may process the data unsafely or incorrectly,"Confidentiality, Integrity, Availability",High,High,Any asset that receives input or data,"Input fields, APIs, network traffic","External attackers, insiders","Data theft, system disruption, financial gain","Input validation, data sanitization, error handling, access control","Log analysis, anomaly detection, intrusion detection",20
Improper Restriction of Pathname to a Restricted Directory ('Path Traversal'),"The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.","The technical impact of this vulnerability is that an attacker can access files or directories outside of the restricted parent directory, potentially leading to unauthorized access, modification, or deletion of sensitive data.","['Confidentiality', 'Integrity', 'Availability']",High,High,"['File systems', 'Directories', 'Sensitive data']","['Input validation', 'File system manipulation']","['External attacker', 'Internal attacker']","['Financial gain', 'Espionage', 'Sabotage']","['Input validation', 'File system permissions', 'Access controls']","['File system monitoring', 'Log analysis']",22
Command Injection,Constructing a command using externally-influenced input without proper sanitization,Execution of unintended commands or code on the downstream component,"Confidentiality, Integrity, Availability",High,High,Any system or application that accepts user input to construct commands,"Input fields, APIs, network protocols","External attackers, insiders","Data theft, system disruption, espionage","Input validation and sanitization, command whitelisting, least privilege access control","Log analysis, anomaly detection, intrusion detection systems",77
Command Injection,Constructing OS commands using externally-influenced input without proper sanitization,"Execution of unintended OS commands with potentially harmful consequences, such as data theft, system compromise, or denial of service","Confidentiality, Integrity, Availability",High,High,Systems that accept user input to construct OS commands,"Input fields, APIs, command-line interfaces","External attackers, insiders","Data theft, system compromise, sabotage","Input validation and sanitization, parameterized queries, least privilege, network segmentation, intrusion detection and prevention systems","Log analysis, anomaly detection, network traffic analysis",78
Failure to neutralize user-controllable input,Incorrectly placing user input in web page output,Execution of malicious code on other users' systems,"['Confidentiality', 'Integrity', 'Availability']",High,High,"['Web application', 'User data']","['Input fields', 'URL parameters', 'HTTP headers']","['External attacker', 'Malicious insider']","['Financial gain', 'Espionage', 'Hacktivism']","['Input validation', 'Output encoding', 'Web application firewall']","['Web application logs', 'Network traffic analysis']",79
SQL Injection,Constructing SQL commands using externally-influenced input without proper sanitization,"Unauthorized access to sensitive data, modification or deletion of data, and potentially complete compromise of the affected system","Confidentiality, integrity, and availability",High,High,"Databases, web applications, and any system that uses SQL commands","Input fields in web forms, HTTP headers, cookies, and other user-controlled input","External attackers, insiders, and automated bots","Financial gain, espionage, sabotage, and activism","Input validation and sanitization, parameterized queries, stored procedures, least privilege, and monitoring and logging","Manual code review, automated vulnerability scanners, and intrusion detection and prevention systems",89
Code Injection,Constructing code segment using externally-influenced input,"Execution of unintended code, unauthorized access to data or system resources, denial of service","Confidentiality, Integrity, Availability",High,High,"Software applications, systems, and networks","Input fields, APIs, network protocols","External attackers, insiders","Financial gain, espionage, sabotage","Input validation, output encoding, secure coding practices, network segmentation, access controls","Code review, penetration testing, intrusion detection and prevention systems",94
Buffer Overflow,Performing operations on a memory buffer that can read from or write to a memory location outside of the intended boundary,"Arbitrary code execution, Denial of Service, Information Disclosure","Confidentiality, Integrity, Availability",High,High,"Software applications, Operating systems, Network devices","Input validation, Memory allocation, Stack and heap overflows","Hackers, Malware authors, Insiders","Financial gain, Espionage, Sabotage","Input validation, Memory protection mechanisms, Code reviews, Penetration testing","Static and dynamic analysis, Fuzz testing, Intrusion detection systems",119
Buffer Overread,Reading data past the end or before the beginning of the intended buffer,"Information Disclosure, Denial of Service","Confidentiality, Availability",High,High,Data stored in the buffer,"Input validation, Memory allocation","External, Internal","Information theft, System disruption","Input validation, Bounds checking, Memory protection mechanisms","Static analysis, Dynamic analysis, Fuzz testing",125
Integer Overflow or Wraparound,Performing a calculation that assumes the resulting value will always be larger than the original value,Can introduce other weaknesses when the calculation is used for resource management or execution control,"['Confidentiality', 'Integrity', 'Availability']",High,High,"['Software applications', 'Hardware devices']","['Input validation', 'Boundary checking']","['Malicious actors', 'Insiders']","['Financial gain', 'Espionage', 'Disruption']","['Input validation', 'Boundary checking', 'Data sanitization']","['Code review', 'Static analysis', 'Dynamic analysis']",190
Improper file permission settings during installation,Setting file permissions to allow anyone to modify installed files,"Allows unauthorized modification of installed files, potentially leading to system compromise or data loss","['Confidentiality', 'Integrity', 'Availability']",High,High,"['Installed software', 'System files']","['Local installation', 'Remote installation']","['Insider', 'External']","['Data theft', 'System compromise', 'Sabotage']","['Proper file permission settings', 'Regular vulnerability scanning']","['File integrity monitoring', 'Log analysis']",276
Insufficient identity verification,Actor claims to have a given identity without sufficient proof,Unauthorized access to sensitive information or resources,Authentication,High,High,Sensitive information or resources,"['Phishing', 'Social engineering', 'Spoofing']","['External', 'Internal']","['Financial gain', 'Espionage', 'Sabotage']","['Multi-factor authentication', 'Identity verification processes', 'Access controls']","['Monitoring for unusual access patterns', 'Auditing identity verification processes', 'Analyzing authentication logs']",287
Lack of authentication for critical functionality,The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.,"Unauthorized access to critical functionality or resources, leading to potential data breaches, system compromise, or denial of service attacks.","['Authentication', 'Authorization', 'Availability']",High,High,"['Sensitive data', 'System resources']","['Network-based attacks', 'Application-based attacks']","['External attackers', 'Insiders']","['Financial gain', 'Espionage', 'Hacktivism', 'Revenge']","['Implement strong authentication mechanisms', 'Enforce access control policies', 'Monitor system resources for anomalies']","['Log analysis', 'Network traffic analysis', 'System resource monitoring']",306
Insufficient Verification of Data Authenticity,"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.","The technical impact of this vulnerability is that an attacker can submit a request that appears to be valid and consistent, but is actually malicious. This can lead to a variety of attacks, including injection attacks, cross-site scripting (XSS) attacks, and other types of attacks that exploit vulnerabilities in the web application.","The security properties affected by this vulnerability include confidentiality, integrity, and availability.","The severity of this vulnerability is high, as it can lead to a variety of attacks that can compromise the security of the web application and the data it processes.","The likelihood of this vulnerability being exploited is high, as it is a common vulnerability that is often exploited by attackers.",The relevant assets for this vulnerability include the web application and the data it processes.,"The attack vectors for this vulnerability include injection attacks, cross-site scripting (XSS) attacks, and other types of attacks that exploit vulnerabilities in the web application.","The attacker types for this vulnerability include hackers, cybercriminals, and other malicious actors.","The attacker motives for this vulnerability include financial gain, espionage, sabotage, and other malicious activities.","The relevant cyber controls for this vulnerability include input validation, output encoding, and other security measures that can help prevent injection attacks, XSS attacks, and other types of attacks that exploit vulnerabilities in the web application.","The detection methods for this vulnerability include vulnerability scanning, penetration testing, and other security testing techniques that can help identify vulnerabilities in the web application.",352
Concurrent Execution using Shared Resource with Timing Window,"The code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequence that is operating concurrently.","The technical impact of this vulnerability is that it can lead to race conditions, deadlocks, and data corruption.","The security properties affected by this vulnerability are confidentiality, integrity, and availability.",The severity of this vulnerability is high.,The likelihood of this vulnerability being exploited is high.,The relevant assets for this vulnerability are any shared resources that are accessed concurrently by multiple code sequences.,The attack vector for this vulnerability is through the shared resource that is being accessed concurrently.,The attacker type for this vulnerability is any attacker who has access to the shared resource.,The attacker motive for this vulnerability is to gain unauthorized access to the shared resource or to disrupt the operation of the code sequence.,"The relevant cyber controls/countermeasures for this vulnerability are implementing proper locking mechanisms, using thread-safe data structures, and performing thorough testing and code reviews.","The detection methods for this vulnerability are through monitoring of system logs and network traffic, as well as through the use of intrusion detection systems.",362
Improper Resource Allocation,Influencing resource consumption to exhaust available resources,Denial of Service,Availability,High,High,Systems with limited resources,"['Network-based', 'Application-based']","['External', 'Internal']","['Financial gain', 'Hacktivism', 'Revenge', 'Competitive advantage']","['Proper resource allocation and management', 'Monitoring resource usage', 'Implementing rate limiting', 'Implementing throttling']","['Monitoring resource usage', 'Analyzing system logs for unusual resource consumption', 'Implementing intrusion detection systems']",400
Referencing memory after it has been freed,Accessing freed memory,"Program crash, unexpected values, or execution of code","Confidentiality, Integrity, Availability",High,High,Software applications,Local or remote,"Malicious actors, insiders","Data theft, system disruption, espionage","Memory management techniques, input validation, error handling","Memory analysis tools, code review, testing",416
File upload vulnerability,Uploading or transferring files of dangerous types,"Execution of malicious code, data theft, denial of service","Confidentiality, integrity, availability",High,High,Product's environment,"Web interface, API",External attacker,"Data theft, sabotage, espionage","Input validation, file type verification, access control, file scanning","File type analysis, anomaly detection, log analysis",434
NULL pointer dereference,Dereferencing a pointer that is expected to be valid but is NULL,Application crash or exit,Availability,High,High,Software applications,Input validation,"Malicious users, attackers","Disruption of service, data theft, system compromise","Input validation, exception handling, defensive programming","Code review, testing, monitoring for crashes or exits",476
Deserialization of untrusted data without proper validation,Deserialization,"Arbitrary code execution, denial of service, data tampering, and information disclosure","Confidentiality, integrity, and availability",High,High,Applications that deserialize untrusted data,Maliciously crafted serialized data sent to the application,"External attackers, insiders, and supply chain attackers","Financial gain, espionage, sabotage, and activism","Input validation, output encoding, and secure deserialization libraries","Static analysis, dynamic analysis, and log analysis",502
XML External Entity (XXE) Injection,The product processes an XML document that contains XML entities with URIs that resolve to documents outside of the intended sphere of control.,"The product embeds incorrect documents into its output, which can lead to data leakage, denial of service, or remote code execution.","Confidentiality, Integrity, Availability",High,High,XML documents processed by the product,Input Validation and Representation,External,"Data theft, Denial of Service, Remote Code Execution","Input validation, XML parsing libraries that disable external entity resolution, and restricting access to external resources.","Manual code review, automated scanning tools, and monitoring for unusual network activity.",611
Buffer Overflow,"The product writes data past the end, or before the beginning, of the intended buffer.","Arbitrary code execution, Denial of Service (DoS), Information Disclosure","Confidentiality, Integrity, Availability",High,High,"Software applications, Operating systems, Network devices","Input validation, Memory allocation, Network communication",Internal and External,"Financial gain, Espionage, Hacktivism, Cyber warfare","Input validation, Memory protection mechanisms, Code review, Penetration testing","Static analysis, Dynamic analysis, Fuzz testing",787
Hard-coded credentials,"Inbound authentication, outbound communication, or encryption of internal data",Unauthorized access to sensitive data or systems,"Confidentiality, integrity, and availability",High,High,"Authentication credentials, encryption keys, sensitive data","['Network-based', 'Application-based']","['Internal', 'External']","['Financial gain', 'Espionage', 'Hacktivism']","['Secure coding practices', 'Credential management', 'Encryption']","['Automated scanning for hard-coded credentials', 'Monitoring for unauthorized access attempts']",798
Authorization bypass,The product does not perform an authorization check,An actor can access a resource or perform an action without proper authorization,"Confidentiality, integrity, and availability",High,High,Any resource or action that requires authorization,"Network, application, and user",Internal and external,"Financial gain, espionage, sabotage, and activism","Implement proper authorization checks, use least privilege principle, and monitor access logs",Monitor access logs and implement anomaly detection,862
CWE 918,"The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.","The attacker can send a request to the web server that retrieves the contents of a URL that the attacker controls, which can result in the disclosure of sensitive information or the execution of arbitrary code on the server.","['Confidentiality', 'Integrity', 'Availability']",High,High,"['Web server', 'Data stored on the web server']",['HTTP requests'],['External attacker'],"['Data theft', 'Denial of service', 'Malicious code execution']","['Input validation', 'URL filtering', 'Access control']","['Log analysis', 'Network traffic analysis']",918
